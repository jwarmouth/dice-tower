pico-8 cartridge // http://www.pico-8.com
version 27
__lua__
function _init()
	e = {}
	--add(e,{29*8+4,14*8,-1,0})
	add_enemy()
	set_path()
	init_menu() -- alex add
	set_mode(0) -- alex add
	reset_d20() -- alex add to restart
	cx = 64
	cy = 64
	cspeed = 3
	t = {}
	difficulty = 1
	preview = {}
	previewing = false
	prevtime = 0
end

function _update()

	if mode != 1 then
		update_menu()
		return
	end
	
	if btn(⬆️) then
		cy = max(cy-cspeed,0)
	end
	if btn(⬇️) then
		cy = min(cy+cspeed,120)
	end
	if btn(⬅️) then
		cx = max(cx-cspeed,0)
	end
	if btn(➡️) then
		cx = min(cx+cspeed,128*2-8)
	end
	
	if rnd(100) < difficulty then
		--add(e,{29*8+4,14*8,-1,2})
		add_enemy()
	end
	
	move_enemies()
 update_d20()
	
	if prevtime == 0
	and previewing == false then
		previewing = true
		preview.speed = 5+rnd(60)
		preview.range = 8+rnd(32)
		if rnd(7) < 1 then
			preview.targets = rnd(10)
		else
			preview.targets = rnd(3)
		end
		prevtime = 30*10
	else
		prevtime -= 1
	end
	
	if btnp(❎) and previewing then
		previewing = false
		add(t,{})
		t[#t].x = cx
		t[#t].y = cy
		t[#t].speed = preview.speed
		t[#t].timer = 0
		t[#t].range = preview.range
		t[#t].targets=preview.targets
		difficulty += 1
	end
	
	for i = 1, #t do
		t[i].timer
		= (t[i].timer+1)%t[i].speed
		if t[i].timer < 1 then
			local tars = t[#t].targets
			for j = #e, 1, -1 do
				if abs(e[j][1]-t[i].x)^2
				  +abs(e[j][2]-t[i].y)^2
				<=t[i].range^2 then
					del(e,e[j])
					--difficulty += .5
					tars -= 1
					if tars < 1 then
						break
					end
				end
			end
		end
	end
end

function _draw()
	cls()
	
	if mode != 1 then
		draw_menu()
		return
	end
	
	
	camera(mid(0,cx-64,128),0)
	map()
	--draw enemies
	for i = 1, #e do
		rectfill(e[i][1],e[i][2],
		       e[i][1]+8,e[i][2]+8,6)
		rect(e[i][1],e[i][2],
		     e[i][1]+8,e[i][2]+8,1)
	end
	--draw towers
	for i = 1, #t do
		circ(t[i].x,t[i].y,t[i].range)
		if t[i].timer < 1 then
			circfill(t[i].x,t[i].y
			,t[i].range)
		end
		print(ceil(t[i].targets)
		,t[i].x,t[i].y)
	end
	
	--draw cursor & preview
	spr(0,cx,cy)
	if previewing then
		circ(cx,cy,preview.range,6)
		print("speed: "
		..ceil(60/preview.speed).."/s"
		,cx-20,cy+10,7)
		print("targets: "
		..ceil(preview.targets)
		,cx-20,cy+20)
	end
	
	draw_d20()
end
-->8
function init_menu()
	menux = 272
end

function set_mode(m)
	mode = m
	-- 0 = title
	-- 1 = active
	-- 2 = game over
	
	if mode !=0 then
		--menux = 256
	end
end

function update_menu()
 	if btn(⬆️) then
		cy = max(cy-cspeed,0)
	end
	if btn(⬇️) then
		cy = min(cy+cspeed,120)
	end
	if btn(⬅️) then
		cx = max(cx-cspeed,0)
	end
	if btn(➡️) then
		cx = min(cx+cspeed,120)
	end
	
	if btnp(❎) then
	 if mode == 2 then
	 	restart()
	 end
	 set_mode(1)
	end
end

function draw_menu()
	if mode == 2 then
		menux = 400
	else
		menux = 272
	end
	camera(menux,0)
	map()
	spr(0,cx+menux,cy)
	if mode == 0 then
		print ("arrows to move",36+menux,96,7) 
		print ("❎ to start",42+menux,103,7) 
	else
		print ("you were diced",36+menux,81,8)
		print ("❎ to restart",38+menux,99,7) 
	end
end

function set_path()
	path = {
		{0,1},		  {13,1},  {13,3}, 
		{0,3},    {0,6},   {3,6},
		{3,9},    {6,9},		 {6,12},
		{10,12},	 {10,9},  {17,9},
		{17,11},  {21,11}, {21,9},
		{23,9},   {23,4},  {20,4},
		{20,1},   {26,1},  {26,11},
		{30,11}
	}
end

function add_enemy()
	if mode != 1 then return end
	add(e,{0,8,2})
end

-- loop through enemies to path
function move_enemies()
	if mode !=1 then return end
	--for i = 1, #e do
	for enemy in all(e) do
		node = path[enemy[3]]
		xdif = node[1]*8 - enemy[1]
		ydif = node[2]*8 - enemy[2]
		enemy[1] += mid(-1, xdif, 1)
		enemy[2] += mid(-1, ydif, 1)
		if enemy[1] == node[1]*8
		and enemy[2] == node[2]*8 then
			enemy[3] += 1
			---[[
			if enemy[3] > #path then
				-- enemy reached end
				del(e, enemy)
				damage_d20()
			end
			--]]
		end
	end
end

function reset_d20()
	d20 = 20
	d20_node = 11
	d20_target = 12
	d20_x = 240
	d20_y = 80
	--d20_x = path[d20_node][1]
	--d20_y = path[d20_node][2] 
end

function damage_d20()
	d20 -= 1
	if d20 <= 10 then
	 d20_target = #path
	end
	if d20 <= 0 then
		set_mode(2)
	end
end

function update_d20()
 if d20_target == d20_node then
  return
 end
 -- move d20 toward target
 --[[
 node = path[d20_node]
	xdif = node[1]*8 - d20_x
	ydif = node[2]*8 - d20_y
	d20_x += mid(-1, xdif, 1)
	d20_y += mid(-1, ydif, 1)
	if d20_x == node[1]*8
	and d20_y == node[2]*8 then
		d20_node += 1
	end
	--]]
end

function draw_d20()
	dxt = 5
	dyt = 7
	if d20 < 10 then
		dxt += 2
	end
	spr (22,d20_x,d20_y,2,2)
	print (d20,d20_x+dxt,d20_y+dyt,0)
end
-->8


	--[[
	for i = 1, #e do
		if e[i][4] > 0 then
			e[i][1] -= 1
			e[i][4] -= 1
			if e[i][4] == 0 then
				e[i][3] *= -1
			end
		else
			e[i][2] += e[i][3]
			if e[i][2] == 12
			or(e[i][2] == 108
			and e[i][1] < 28*8) then
				e[i][4] = 4*8
			end
		end
	end
	--]]

__gfx__
00000000333333339999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000333333339999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700333333339499499900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000333333339999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000333333339999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700333333339949949900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000333333339999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000333333339999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020202020201010202020202020101020202020202010102020202020201000002020202020202020202020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020202020201010202020202020101020202020202010102020202020201000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020201010202010102020101020201010202010102020101020201000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020201010202010102020101020201010202010102020101020201000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020201010202010102020101020201010202010102020101020201000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020201010202010102020101020201010202010102020101020201000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020201010202010102020101020201010202010102020101020201000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020201010202010102020101020201010202010102020101020201000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020201010202010102020101020201010202010102020101020201000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020201010202010102020101020201010202010102020101020201000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020201010202010102020101020201010202010102020101020201000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020201010202010102020101020201010202010102020101020201000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020202020202010102020202020201010202020202020101020201000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020101020202020202010102020202020201010202020202020101020201000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010101010101020201000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
